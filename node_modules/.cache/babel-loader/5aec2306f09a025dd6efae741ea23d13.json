{"ast":null,"code":"import _classCallCheck from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/App.js\";\n// import React, { Component } from 'react';\n// import { compose } from 'recompose';\n// import BookItem from './components/bookItem/BookItem';\n// import { Item } from 'semantic-ui-react'\n// import BookList from './components/bookList/BookList';\n// // import logo from './logo.svg';\n// import './App.css';\n// // import { Button } from 'semantic-ui-react'\n// // import { Image as ImageComponent, Item } from 'semantic-ui-react'\n// // const paragraph = <ImageComponent src={require('/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/images/short-paragraph.png')} />\n// const applyUpdateResult = (result) => (prevState) => ({\n//   docs: [...prevState.docs, ...result.docs],\n//   page: result.page,\n//   isLoading: false,\n// });\n// const applySetResult = (result) => (prevState) => ({\n//   docs: result.docs,\n//   page: result.page,\n//   isLoading: false,\n// });\n// const getBooks = (page) => `https://thebooksofmedium-api.herokuapp.com/books/ppp?limit=20&&page=${page + 1}`;\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       docs: [],\n//       page: null,\n//       isLoading: false,\n//     };\n//     console.log(\"constructor\")\n//     this.fetchStories(\"a\", 0);\n//   }\n//   onInitialSearch = (e) => {\n//     // e.preventDefault();\n//     // const { value } = this.input;\n//     // if (value === '') {\n//     //   return;\n//     // }\n//     // this.fetchStories(value, 0);\n//     this.fetchStories(0);\n//   }\n//   onPaginatedSearch = (e) => this.fetchStories(this.state.page + 1);\n//   fetchStories = (page) => {\n//     this.setState({ isLoading: true });\n//     fetch(getBooks(page))\n//       .then(response => response.json())\n//       .then(result => {\n//         this.onSetResult(result, page)\n//         console.log(\"docs:\", result.docs)\n//       }\n//       );\n//   }\n//   onSetResult = (result, page) =>\n//     page === 0\n//       ? this.setState(applySetResult(result))\n//       : this.setState(applyUpdateResult(result));\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* <BookList /> */}\n//         <ListWithLoadingWithInfinite\n//           list={this.state.docs}\n//           isLoading={this.state.isLoading}\n//           page={this.state.page}\n//           onPaginatedSearch={this.onPaginatedSearch}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const withLoading = (Component) => (props) =>\n//   <div>\n//     <Component {...props} />\n//     <div className=\"interactions\">\n//       {props.isLoading && <span>Loading...</span>}\n//     </div>\n//   </div>\n// const withInfiniteScroll = (Component) =>\n//   class WithInfiniteScroll extends React.Component {\n//     componentDidMount() {\n//       window.addEventListener('scroll', this.onScroll, false);\n//     }\n//     componentWillUnmount() {\n//       window.removeEventListener('scroll', this.onScroll, false);\n//     }\n//     onScroll = () => {\n//       if (\n//         (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500) &&\n//         this.props.list.length &&\n//         !this.props.isLoading\n//       ) {\n//         this.props.onPaginatedSearch();\n//       }\n//     }\n//     render() {\n//       return <Component {...this.props} />;\n//     }\n//   }\n// // const List = ({ list }) =>\n// // <div className=\"list\">\n// //   {list.map(item => <div className=\"list-row\" key={item._id}>\n// //     <a href={item.amazonLink}>{item.bookName}</a>\n// //   </div>)}\n// // </div>\n// const List = ({ list }) =>\n//   <Item.Group divided>\n//     {\n//       list.map((bookObject, index) => {\n//         return (\n//           <BookItem\n//             id={bookObject.id}\n//             bookName={bookObject.bookName}\n//             bookAuthor={bookObject.bookAuthor}\n//             amazonLink={bookObject.amazonLink}\n//             // bookCoverImg={bookObject.bookCoverImg}\n//             totalMentionsClaps={bookObject.totalMentionsClaps}\n//             numberOfMentions={bookObject.numberOfMentions}\n//             score={bookObject.score}\n//             index={index}\n//           />\n//         );\n//       })\n//     }\n//   </Item.Group>\n// https://thebooksofmedium-api.herokuapp.com/books/ppp?limit=20&&page=${page + 1}`\n// const ListWithLoadingWithInfinite = compose(\n//   withInfiniteScroll,\n//   withLoading,\n// )(List);\n// export default App;\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport qwest from 'qwest';\nvar imageList = []; // const api = {\n//     baseUrl: 'https://api.soundcloud.com',\n//     client_id: 'caf73ef1e709f839664ab82bef40fa96'\n// };\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      books: [],\n      hasMoreItems: true,\n      nextHref: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadItems\",\n    value: function loadItems(page) {\n      var self = this; // var url = api.baseUrl + '/users/8665091/favorites';\n\n      var url = \"https://thebooksofmedium-api.herokuapp.com/books/ppp?limit=20&&page=$\" + page;\n\n      if (this.state.nextHref) {\n        url = this.state.nextHref;\n      } // qwest.get(url, {\n      //         cache: true\n      //     })\n\n\n      qwest.get(url).then(function (xhr, resp) {\n        if (resp) {\n          var books = self.state.books;\n          resp.docs.map(function (book) {\n            // if(book.bookName == null) {\n            //     book.bookName = book.bookName;\n            // }\n            books.push(book);\n          }); // if(resp.next_href) {\n\n          if (resp.next_href) {\n            self.setState({\n              books: books,\n              nextHref: resp.next_href\n            });\n          } else {\n            self.setState({\n              hasMoreItems: false\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loader = React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Loading ...\");\n      var items = [];\n      this.state.books.map(function (book, i) {\n        items.push(React.createElement(\"div\", {\n          className: \"book\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: book.bookName,\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: book.bookCoverImg,\n          width: \"150\",\n          height: \"200\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, book.bookName))));\n      });\n      return React.createElement(InfiniteScroll, {\n        pageStart: 0,\n        loadMore: this.loadItems.bind(this) // hasMore={this.state.hasMoreItems}\n        ,\n        hasMore: true,\n        loader: loader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, items));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\nexport default App; // ReactDOM.render(\n//     <App />\n// , document.getElementById('root'));","map":{"version":3,"sources":["/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/App.js"],"names":["React","Component","ReactDOM","InfiniteScroll","qwest","imageList","App","props","state","books","hasMoreItems","nextHref","page","self","url","get","then","xhr","resp","docs","map","book","push","next_href","setState","loader","items","i","bookName","bookCoverImg","loadItems","bind"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAG,EAAlB,C,CACA;AACA;AACA;AACA;;IAEMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE,IAFL;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAHe;AAQlB;;;;8BAESC,I,EAAM;AACZ,UAAIC,IAAI,GAAG,IAAX,CADY,CAGZ;;AACA,UAAIC,GAAG,GAAG,0EAA0EF,IAApF;;AACA,UAAG,KAAKJ,KAAL,CAAWG,QAAd,EAAwB;AACpBG,QAAAA,GAAG,GAAG,KAAKN,KAAL,CAAWG,QAAjB;AACH,OAPW,CASZ;AACA;AACA;;;AAEAP,MAAAA,KAAK,CAACW,GAAN,CAAUD,GAAV,EACKE,IADL,CACU,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACtB,YAAGA,IAAH,EAAS;AACL,cAAIT,KAAK,GAAGI,IAAI,CAACL,KAAL,CAAWC,KAAvB;AACAS,UAAAA,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAc,UAACC,IAAD,EAAU;AACpB;AACA;AACA;AAEAZ,YAAAA,KAAK,CAACa,IAAN,CAAWD,IAAX;AACH,WAND,EAFK,CAUL;;AACA,cAAGH,IAAI,CAACK,SAAR,EAAmB;AAEfV,YAAAA,IAAI,CAACW,QAAL,CAAc;AACVf,cAAAA,KAAK,EAAEA,KADG;AAEVE,cAAAA,QAAQ,EAAEO,IAAI,CAACK;AAFL,aAAd;AAIH,WAND,MAMO;AACHV,YAAAA,IAAI,CAACW,QAAL,CAAc;AACVd,cAAAA,YAAY,EAAE;AADJ,aAAd;AAGH;AACJ;AACJ,OAzBL;AA0BH;;;6BAEQ;AACL,UAAMe,MAAM,GAAG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAf;AAEA,UAAIC,KAAK,GAAG,EAAZ;AACA,WAAKlB,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAqB,UAACC,IAAD,EAAOM,CAAP,EAAa;AAC9BD,QAAAA,KAAK,CAACJ,IAAN,CACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEK,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,IAAI,EAAEN,IAAI,CAACO,QAAd;AAAwB,UAAA,MAAM,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAEP,IAAI,CAACQ,YAAf;AAA6B,UAAA,KAAK,EAAC,KAAnC;AAAyC,UAAA,MAAM,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBR,IAAI,CAACO,QAA3B,CAFJ,CADJ,CADJ;AAQH,OATD;AAWA,aACI,oBAAC,cAAD;AACI,QAAA,SAAS,EAAE,CADf;AAEI,QAAA,QAAQ,EAAE,KAAKE,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAFd,CAGI;AAHJ;AAII,QAAA,OAAO,EAAE,IAJb;AAMI,QAAA,MAAM,EAAEN,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KADL,CARJ,CADJ;AAcH;;;;EAjFazB,S;;AAkFjB;AAGD,eAAeK,GAAf,C,CAGA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// import { compose } from 'recompose';\n// import BookItem from './components/bookItem/BookItem';\n// import { Item } from 'semantic-ui-react'\n\n\n// import BookList from './components/bookList/BookList';\n// // import logo from './logo.svg';\n// import './App.css';\n// // import { Button } from 'semantic-ui-react'\n// // import { Image as ImageComponent, Item } from 'semantic-ui-react'\n\n// // const paragraph = <ImageComponent src={require('/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/images/short-paragraph.png')} />\n\n\n// const applyUpdateResult = (result) => (prevState) => ({\n//   docs: [...prevState.docs, ...result.docs],\n//   page: result.page,\n//   isLoading: false,\n// });\n\n// const applySetResult = (result) => (prevState) => ({\n//   docs: result.docs,\n//   page: result.page,\n//   isLoading: false,\n// });\n\n\n// const getBooks = (page) => `https://thebooksofmedium-api.herokuapp.com/books/ppp?limit=20&&page=${page + 1}`;\n\n\n\n\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       docs: [],\n//       page: null,\n//       isLoading: false,\n//     };\n//     console.log(\"constructor\")\n//     this.fetchStories(\"a\", 0);\n\n//   }\n\n\n//   onInitialSearch = (e) => {\n//     // e.preventDefault();\n\n//     // const { value } = this.input;\n\n//     // if (value === '') {\n//     //   return;\n//     // }\n\n//     // this.fetchStories(value, 0);\n\n//     this.fetchStories(0);\n//   }\n\n\n//   onPaginatedSearch = (e) => this.fetchStories(this.state.page + 1);\n\n//   fetchStories = (page) => {\n//     this.setState({ isLoading: true });\n//     fetch(getBooks(page))\n//       .then(response => response.json())\n//       .then(result => {\n//         this.onSetResult(result, page)\n//         console.log(\"docs:\", result.docs)\n//       }\n//       );\n\n//   }\n\n//   onSetResult = (result, page) =>\n//     page === 0\n//       ? this.setState(applySetResult(result))\n//       : this.setState(applyUpdateResult(result));\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* <BookList /> */}\n\n\n//         <ListWithLoadingWithInfinite\n//           list={this.state.docs}\n//           isLoading={this.state.isLoading}\n//           page={this.state.page}\n//           onPaginatedSearch={this.onPaginatedSearch}\n//         />\n//       </div>\n\n\n//     );\n//   }\n// }\n\n// const withLoading = (Component) => (props) =>\n//   <div>\n//     <Component {...props} />\n\n//     <div className=\"interactions\">\n//       {props.isLoading && <span>Loading...</span>}\n//     </div>\n//   </div>\n\n\n\n// const withInfiniteScroll = (Component) =>\n//   class WithInfiniteScroll extends React.Component {\n//     componentDidMount() {\n//       window.addEventListener('scroll', this.onScroll, false);\n//     }\n\n//     componentWillUnmount() {\n//       window.removeEventListener('scroll', this.onScroll, false);\n//     }\n\n//     onScroll = () => {\n//       if (\n//         (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500) &&\n//         this.props.list.length &&\n//         !this.props.isLoading\n//       ) {\n//         this.props.onPaginatedSearch();\n//       }\n//     }\n\n//     render() {\n//       return <Component {...this.props} />;\n//     }\n//   }\n\n\n\n// // const List = ({ list }) =>\n// // <div className=\"list\">\n// //   {list.map(item => <div className=\"list-row\" key={item._id}>\n// //     <a href={item.amazonLink}>{item.bookName}</a>\n// //   </div>)}\n// // </div>\n\n\n// const List = ({ list }) =>\n//   <Item.Group divided>\n//     {\n//       list.map((bookObject, index) => {\n//         return (\n//           <BookItem\n//             id={bookObject.id}\n//             bookName={bookObject.bookName}\n//             bookAuthor={bookObject.bookAuthor}\n//             amazonLink={bookObject.amazonLink}\n//             // bookCoverImg={bookObject.bookCoverImg}\n//             totalMentionsClaps={bookObject.totalMentionsClaps}\n//             numberOfMentions={bookObject.numberOfMentions}\n//             score={bookObject.score}\n//             index={index}\n//           />\n//         );\n//       })\n//     }\n//   </Item.Group>\n\n\n\n// https://thebooksofmedium-api.herokuapp.com/books/ppp?limit=20&&page=${page + 1}`\n\n\n\n// const ListWithLoadingWithInfinite = compose(\n//   withInfiniteScroll,\n//   withLoading,\n// )(List);\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport qwest from 'qwest';\n\nconst imageList = [];\n// const api = {\n//     baseUrl: 'https://api.soundcloud.com',\n//     client_id: 'caf73ef1e709f839664ab82bef40fa96'\n// };\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            books: [],\n            hasMoreItems: true,\n            nextHref: null\n        };\n    }\n\n    loadItems(page) {\n        var self = this;\n\n        // var url = api.baseUrl + '/users/8665091/favorites';\n        var url = \"https://thebooksofmedium-api.herokuapp.com/books/ppp?limit=20&&page=$\" + page;\n        if(this.state.nextHref) {\n            url = this.state.nextHref;\n        }\n\n        // qwest.get(url, {\n        //         cache: true\n        //     })\n\n        qwest.get(url)\n            .then(function(xhr, resp) {\n                if(resp) {\n                    var books = self.state.books;\n                    resp.docs.map((book) => {\n                        // if(book.bookName == null) {\n                        //     book.bookName = book.bookName;\n                        // }\n\n                        books.push(book);\n                    });\n\n                    // if(resp.next_href) {\n                    if(resp.next_href) {\n\n                        self.setState({\n                            books: books,\n                            nextHref: resp.next_href\n                        });\n                    } else {\n                        self.setState({\n                            hasMoreItems: false\n                        });\n                    }\n                }\n            });\n    }\n\n    render() {\n        const loader = <div className=\"loader\">Loading ...</div>;\n\n        var items = [];\n        this.state.books.map((book, i) => {\n            items.push(\n                <div className=\"book\" key={i}>\n                    <a href={book.bookName} target=\"_blank\">\n                        <img src={book.bookCoverImg} width=\"150\" height=\"200\" />\n                        <p className=\"title\">{book.bookName}</p>\n                    </a>\n                </div>\n            );\n        });\n\n        return (\n            <InfiniteScroll\n                pageStart={0}\n                loadMore={this.loadItems.bind(this)}\n                // hasMore={this.state.hasMoreItems}\n                hasMore={true}\n\n                loader={loader}>\n\n                <div className=\"books\">\n                    {items}\n                </div>\n            </InfiniteScroll>\n        );\n    }\n};\n\n\nexport default App;\n\n\n// ReactDOM.render(\n//     <App />\n// , document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}