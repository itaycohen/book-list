{"ast":null,"code":"import _classCallCheck from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/App.js\";\n// import React, { Component } from 'react';\n// import { compose } from 'recompose';\n// import BookItem from './components/bookItem/BookItem';\n// import { Item } from 'semantic-ui-react'\n// import BookList from './components/bookList/BookList';\n// // import logo from './logo.svg';\n// import './App.css';\n// // import { Button } from 'semantic-ui-react'\n// // import { Image as ImageComponent, Item } from 'semantic-ui-react'\n// // const paragraph = <ImageComponent src={require('/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/images/short-paragraph.png')} />\n// const applyUpdateResult = (result) => (prevState) => ({\n//   docs: [...prevState.docs, ...result.docs],\n//   page: result.page,\n//   isLoading: false,\n// });\n// const applySetResult = (result) => (prevState) => ({\n//   docs: result.docs,\n//   page: result.page,\n//   isLoading: false,\n// });\n// const getBooks = (page) => `https://thebooksofmedium-api.herokuapp.com/books/sub-page\"?limit=20&&page=${page + 1}`;\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       docs: [],\n//       page: null,\n//       isLoading: false,\n//     };\n//     console.log(\"constructor\")\n//     this.fetchStories(\"a\", 0);\n//   }\n//   onInitialSearch = (e) => {\n//     // e.preventDefault();\n//     // const { value } = this.input;\n//     // if (value === '') {\n//     //   return;\n//     // }\n//     // this.fetchStories(value, 0);\n//     this.fetchStories(0);\n//   }\n//   onPaginatedSearch = (e) => this.fetchStories(this.state.page + 1);\n//   fetchStories = (page) => {\n//     this.setState({ isLoading: true });\n//     fetch(getBooks(page))\n//       .then(response => response.json())\n//       .then(result => {\n//         this.onSetResult(result, page)\n//         console.log(\"docs:\", result.docs)\n//       }\n//       );\n//   }\n//   onSetResult = (result, page) =>\n//     page === 0\n//       ? this.setState(applySetResult(result))\n//       : this.setState(applyUpdateResult(result));\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* <BookList /> */}\n//         <ListWithLoadingWithInfinite\n//           list={this.state.docs}\n//           isLoading={this.state.isLoading}\n//           page={this.state.page}\n//           onPaginatedSearch={this.onPaginatedSearch}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const withLoading = (Component) => (props) =>\n//   <div>\n//     <Component {...props} />\n//     <div className=\"interactions\">\n//       {props.isLoading && <span>Loading...</span>}\n//     </div>\n//   </div>\n// const withInfiniteScroll = (Component) =>\n//   class WithInfiniteScroll extends React.Component {\n//     componentDidMount() {\n//       window.addEventListener('scroll', this.onScroll, false);\n//     }\n//     componentWillUnmount() {\n//       window.removeEventListener('scroll', this.onScroll, false);\n//     }\n//     onScroll = () => {\n//       if (\n//         (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500) &&\n//         this.props.list.length &&\n//         !this.props.isLoading\n//       ) {\n//         this.props.onPaginatedSearch();\n//       }\n//     }\n//     render() {\n//       return <Component {...this.props} />;\n//     }\n//   }\n// // const List = ({ list }) =>\n// // <div className=\"list\">\n// //   {list.map(item => <div className=\"list-row\" key={item._id}>\n// //     <a href={item.amazonLink}>{item.bookName}</a>\n// //   </div>)}\n// // </div>\n// const List = ({ list }) =>\n//   <Item.Group divided>\n//     {\n//       list.map((bookObject, index) => {\n//         return (\n//           <BookItem\n//             id={bookObject.id}\n//             bookName={bookObject.bookName}\n//             bookAuthor={bookObject.bookAuthor}\n//             amazonLink={bookObject.amazonLink}\n//             // bookCoverImg={bookObject.bookCoverImg}\n//             totalMentionsClaps={bookObject.totalMentionsClaps}\n//             numberOfMentions={bookObject.numberOfMentions}\n//             score={bookObject.score}\n//             index={index}\n//           />\n//         );\n//       })\n//     }\n//   </Item.Group>\n// https://thebooksofmedium-api.herokuapp.com/books/sub-page?limit=20&&page=${page + 1}`\n// const ListWithLoadingWithInfinite = compose(\n//   withInfiniteScroll,\n//   withLoading,\n// )(List);\n// export default App;\nimport React, { Component } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport qwest from 'qwest';\nimport BookItem from './components/bookItem/BookItem';\nimport { Item } from 'semantic-ui-react';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      books: [],\n      hasMoreItems: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadItems\",\n    value: function loadItems(page) {\n      var self = this; // var url = api.baseUrl + '/users/8665091/favorites';\n\n      var url = \"https://thebooksofmedium-api.herokuapp.com/books/sub-page?limit=100&&page=\" + page; // var url = \"https://thebooksofmedium-api.herokuapp.com/books/sub-page?limit=20&&page=100\";\n      // qwest.get(url, {\n      //         cache: true\n      //     })\n\n      qwest.get(url, {\n        cache: true\n      }).then(function (xhr, resp) {\n        if (resp) {\n          var books = self.state.books;\n          resp.docs.map(function (book) {\n            books.push(book);\n          });\n          self.setState({\n            books: books\n          });\n        }\n      }).catch(function (e, xhr, response) {\n        self.setState({\n          hasMoreItems: false\n        });\n        console.error(\"no more\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loader = React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Loading ...\");\n      var items = [];\n      this.state.books.map(function (bookObject, i) {\n        items.push( // <div className=\"book\" key={i}>\n        //   <a href={book.bookName} target=\"_blank\">\n        //     <img src={book.bookCoverImg} width=\"150\" height=\"200\" />\n        //     <p className=\"title\">{book.bookName}</p>\n        //   </a>\n        // </div>\n        React.createElement(BookItem, {\n          id: bookObject.id,\n          bookName: bookObject.bookName,\n          bookAuthor: bookObject.bookAuthor,\n          amazonLink: bookObject.amazonLink // bookCoverImg={bookObject.bookCoverImg}\n          ,\n          totalMentionsClaps: bookObject.totalMentionsClaps,\n          numberOfMentions: bookObject.numberOfMentions,\n          score: bookObject.score,\n          index: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(InfiniteScroll, {\n        pageStart: 0,\n        loadMore: this.loadItems.bind(this),\n        hasMore: this.state.hasMoreItems // hasMore={true}\n        ,\n        loader: loader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Item.Group, {\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, items)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\n{\n  /* <Item.Group divided>\n   {\n     list.map((bookObject, index) => {\n       return (\n         <BookItem\n           id={bookObject.id}\n           bookName={bookObject.bookName}\n           bookAuthor={bookObject.bookAuthor}\n           amazonLink={bookObject.amazonLink}\n           // bookCoverImg={bookObject.bookCoverImg}\n           totalMentionsClaps={bookObject.totalMentionsClaps}\n           numberOfMentions={bookObject.numberOfMentions}\n           score={bookObject.score}\n           index={index}\n         />\n       );\n     })\n   }\n  </Item.Group> */\n}\nexport default App; // ReactDOM.render(\n//     <App />\n// , document.getElementById('root'));","map":{"version":3,"sources":["/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/App.js"],"names":["React","Component","InfiniteScroll","qwest","BookItem","Item","App","props","state","books","hasMoreItems","page","self","url","get","cache","then","xhr","resp","docs","map","book","push","setState","catch","e","response","console","error","loader","items","bookObject","i","id","bookName","bookAuthor","amazonLink","totalMentionsClaps","numberOfMentions","score","loadItems","bind"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;;IAGMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAHiB;AAOlB;;;;8BAESC,I,EAAM;AACd,UAAIC,IAAI,GAAG,IAAX,CADc,CAGd;;AACA,UAAIC,GAAG,GAAG,+EAA+EF,IAAzF,CAJc,CAKd;AAGA;AACA;AACA;;AAEAR,MAAAA,KAAK,CAACW,GAAN,CAAUD,GAAV,EAAe;AACbE,QAAAA,KAAK,EAAE;AADM,OAAf,EAGGC,IAHH,CAGQ,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACzB,YAAIA,IAAJ,EAAU;AACR,cAAIT,KAAK,GAAGG,IAAI,CAACJ,KAAL,CAAWC,KAAvB;AACAS,UAAAA,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAc,UAACC,IAAD,EAAU;AACtBZ,YAAAA,KAAK,CAACa,IAAN,CAAWD,IAAX;AACD,WAFD;AAGAT,UAAAA,IAAI,CAACW,QAAL,CAAc;AACZd,YAAAA,KAAK,EAAEA;AADK,WAAd;AAGD;AACF,OAbH,EAcGe,KAdH,CAcS,UAAUC,CAAV,EAAaR,GAAb,EAAkBS,QAAlB,EAA4B;AACjCd,QAAAA,IAAI,CAACW,QAAL,CAAc;AACZb,UAAAA,YAAY,EAAE;AADF,SAAd;AAGAiB,QAAAA,OAAO,CAACC,KAAR,CAAc,SAAd;AACD,OAnBH;AAoBD;;;6BAEQ;AACP,UAAMC,MAAM,GAAG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAf;AAEA,UAAIC,KAAK,GAAG,EAAZ;AACA,WAAKtB,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAqB,UAACW,UAAD,EAAaC,CAAb,EAAmB;AACtCF,QAAAA,KAAK,CAACR,IAAN,EACE;AACA;AACA;AACA;AACA;AACA;AAGA,4BAAC,QAAD;AACE,UAAA,EAAE,EAAES,UAAU,CAACE,EADjB;AAEE,UAAA,QAAQ,EAAEF,UAAU,CAACG,QAFvB;AAGE,UAAA,UAAU,EAAEH,UAAU,CAACI,UAHzB;AAIE,UAAA,UAAU,EAAEJ,UAAU,CAACK,UAJzB,CAKE;AALF;AAME,UAAA,kBAAkB,EAAEL,UAAU,CAACM,kBANjC;AAOE,UAAA,gBAAgB,EAAEN,UAAU,CAACO,gBAP/B;AAQE,UAAA,KAAK,EAAEP,UAAU,CAACQ,KARpB;AASE,UAAA,KAAK,EAAEP,CATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF;AAqBD,OAtBD;AAwBA,aACE,oBAAC,cAAD;AACE,QAAA,SAAS,EAAE,CADb;AAEE,QAAA,QAAQ,EAAE,KAAKQ,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAFZ;AAGE,QAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWE,YAHtB,CAIE;AAJF;AAME,QAAA,MAAM,EAAEmB,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KADH,CADF,CARF,CADF;AAgBD;;;;EAxFe7B,S;;AAyFjB;AAED;AAAC;;;;;;;;;;;;;;;;;;;AAkBgB;AAGjB,eAAeK,GAAf,C,CAGA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// import { compose } from 'recompose';\n// import BookItem from './components/bookItem/BookItem';\n// import { Item } from 'semantic-ui-react'\n\n\n// import BookList from './components/bookList/BookList';\n// // import logo from './logo.svg';\n// import './App.css';\n// // import { Button } from 'semantic-ui-react'\n// // import { Image as ImageComponent, Item } from 'semantic-ui-react'\n\n// // const paragraph = <ImageComponent src={require('/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/images/short-paragraph.png')} />\n\n\n// const applyUpdateResult = (result) => (prevState) => ({\n//   docs: [...prevState.docs, ...result.docs],\n//   page: result.page,\n//   isLoading: false,\n// });\n\n// const applySetResult = (result) => (prevState) => ({\n//   docs: result.docs,\n//   page: result.page,\n//   isLoading: false,\n// });\n\n\n// const getBooks = (page) => `https://thebooksofmedium-api.herokuapp.com/books/sub-page\"?limit=20&&page=${page + 1}`;\n\n\n\n\n\n// class App extends Component {\n\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       docs: [],\n//       page: null,\n//       isLoading: false,\n//     };\n//     console.log(\"constructor\")\n//     this.fetchStories(\"a\", 0);\n\n//   }\n\n\n//   onInitialSearch = (e) => {\n//     // e.preventDefault();\n\n//     // const { value } = this.input;\n\n//     // if (value === '') {\n//     //   return;\n//     // }\n\n//     // this.fetchStories(value, 0);\n\n//     this.fetchStories(0);\n//   }\n\n\n//   onPaginatedSearch = (e) => this.fetchStories(this.state.page + 1);\n\n//   fetchStories = (page) => {\n//     this.setState({ isLoading: true });\n//     fetch(getBooks(page))\n//       .then(response => response.json())\n//       .then(result => {\n//         this.onSetResult(result, page)\n//         console.log(\"docs:\", result.docs)\n//       }\n//       );\n\n//   }\n\n//   onSetResult = (result, page) =>\n//     page === 0\n//       ? this.setState(applySetResult(result))\n//       : this.setState(applyUpdateResult(result));\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* <BookList /> */}\n\n\n//         <ListWithLoadingWithInfinite\n//           list={this.state.docs}\n//           isLoading={this.state.isLoading}\n//           page={this.state.page}\n//           onPaginatedSearch={this.onPaginatedSearch}\n//         />\n//       </div>\n\n\n//     );\n//   }\n// }\n\n// const withLoading = (Component) => (props) =>\n//   <div>\n//     <Component {...props} />\n\n//     <div className=\"interactions\">\n//       {props.isLoading && <span>Loading...</span>}\n//     </div>\n//   </div>\n\n\n\n// const withInfiniteScroll = (Component) =>\n//   class WithInfiniteScroll extends React.Component {\n//     componentDidMount() {\n//       window.addEventListener('scroll', this.onScroll, false);\n//     }\n\n//     componentWillUnmount() {\n//       window.removeEventListener('scroll', this.onScroll, false);\n//     }\n\n//     onScroll = () => {\n//       if (\n//         (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500) &&\n//         this.props.list.length &&\n//         !this.props.isLoading\n//       ) {\n//         this.props.onPaginatedSearch();\n//       }\n//     }\n\n//     render() {\n//       return <Component {...this.props} />;\n//     }\n//   }\n\n\n\n// // const List = ({ list }) =>\n// // <div className=\"list\">\n// //   {list.map(item => <div className=\"list-row\" key={item._id}>\n// //     <a href={item.amazonLink}>{item.bookName}</a>\n// //   </div>)}\n// // </div>\n\n\n// const List = ({ list }) =>\n//   <Item.Group divided>\n//     {\n//       list.map((bookObject, index) => {\n//         return (\n//           <BookItem\n//             id={bookObject.id}\n//             bookName={bookObject.bookName}\n//             bookAuthor={bookObject.bookAuthor}\n//             amazonLink={bookObject.amazonLink}\n//             // bookCoverImg={bookObject.bookCoverImg}\n//             totalMentionsClaps={bookObject.totalMentionsClaps}\n//             numberOfMentions={bookObject.numberOfMentions}\n//             score={bookObject.score}\n//             index={index}\n//           />\n//         );\n//       })\n//     }\n//   </Item.Group>\n\n\n\n// https://thebooksofmedium-api.herokuapp.com/books/sub-page?limit=20&&page=${page + 1}`\n\n\n\n// const ListWithLoadingWithInfinite = compose(\n//   withInfiniteScroll,\n//   withLoading,\n// )(List);\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport qwest from 'qwest';\nimport BookItem from './components/bookItem/BookItem';\nimport { Item } from 'semantic-ui-react'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      books: [],\n      hasMoreItems: true,\n    };\n  }\n\n  loadItems(page) {\n    var self = this;\n\n    // var url = api.baseUrl + '/users/8665091/favorites';\n    var url = \"https://thebooksofmedium-api.herokuapp.com/books/sub-page?limit=100&&page=\" + page;\n    // var url = \"https://thebooksofmedium-api.herokuapp.com/books/sub-page?limit=20&&page=100\";\n\n\n    // qwest.get(url, {\n    //         cache: true\n    //     })\n\n    qwest.get(url, {\n      cache: true\n    })\n      .then(function (xhr, resp) {\n        if (resp) {\n          var books = self.state.books;\n          resp.docs.map((book) => {\n            books.push(book);\n          });\n          self.setState({\n            books: books,\n          });\n        }\n      })\n      .catch(function (e, xhr, response) {\n        self.setState({\n          hasMoreItems: false\n        });\n        console.error(\"no more\")\n      });\n  }\n\n  render() {\n    const loader = <div className=\"loader\">Loading ...</div>;\n\n    var items = [];\n    this.state.books.map((bookObject, i) => {\n      items.push(\n        // <div className=\"book\" key={i}>\n        //   <a href={book.bookName} target=\"_blank\">\n        //     <img src={book.bookCoverImg} width=\"150\" height=\"200\" />\n        //     <p className=\"title\">{book.bookName}</p>\n        //   </a>\n        // </div>\n\n\n        <BookItem\n          id={bookObject.id}\n          bookName={bookObject.bookName}\n          bookAuthor={bookObject.bookAuthor}\n          amazonLink={bookObject.amazonLink}\n          // bookCoverImg={bookObject.bookCoverImg}\n          totalMentionsClaps={bookObject.totalMentionsClaps}\n          numberOfMentions={bookObject.numberOfMentions}\n          score={bookObject.score}\n          index={i}\n        />\n      );\n    });\n\n    return (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={this.loadItems.bind(this)}\n        hasMore={this.state.hasMoreItems}\n        // hasMore={true}\n\n        loader={loader}>\n\n        <div className=\"books\">\n          <Item.Group divided>\n            {items}\n          </Item.Group>\n        </div>\n      </InfiniteScroll>\n    );\n  }\n};\n\n{/* <Item.Group divided>\n  {\n    list.map((bookObject, index) => {\n      return (\n        <BookItem\n          id={bookObject.id}\n          bookName={bookObject.bookName}\n          bookAuthor={bookObject.bookAuthor}\n          amazonLink={bookObject.amazonLink}\n          // bookCoverImg={bookObject.bookCoverImg}\n          totalMentionsClaps={bookObject.totalMentionsClaps}\n          numberOfMentions={bookObject.numberOfMentions}\n          score={bookObject.score}\n          index={index}\n        />\n      );\n    })\n  }\n</Item.Group> */}\n\n\nexport default App;\n\n\n// ReactDOM.render(\n//     <App />\n// , document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}