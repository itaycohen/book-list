{"ast":null,"code":"import _classCallCheck from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/App.js\";\nimport React, { Component } from 'react';\nimport BookList from './components/bookList/BookList';\nimport ResponsiveContainer from './components/responsiveContainer/ResponsiveContainer';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { Container, Menu, Segment, Visibility, Responsive, Sidebar, Header, Icon, Button } from 'semantic-ui-react'; // const getWidth = () => {\n//   const isSSR = typeof window === 'undefined'\n//   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n// }\n// /* eslint-disable react/no-multi-comp */\n// /* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n//  * such things.\n//  */\n// const HomepageHeading = ({ mobile }) => (\n//   <Container text>\n//     <Header\n//       as='h2'\n//       content='The most mentioned books on Medium'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '1.1em' : '1.5em',\n//         fontWeight: 'normal',\n//         marginBottom: 0,\n//         marginTop: mobile ? '1em' : '1.5em',\n//       }}\n//     />\n//     <Header\n//       as='h3'\n//       content='I analyzed every book ever mentioned on Medium. Here are the most popular ones.'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '0.9em' : '1em',\n//         fontWeight: 'normal',\n//         marginTop: mobile ? '0.5em' : '1em',\n//       }}\n//     />\n//     {/* <Button primary size='huge'>\n//       Get Started\n//       <Icon name='right arrow' />\n//     </Button> */}\n//   </Container>\n// )\n// HomepageHeading.propTypes = {\n//   mobile: PropTypes.bool,\n// }\n// const ResponsiveContainer = ({ children }) => (\n//   <div>\n//     <DesktopContainer>{children}</DesktopContainer>\n//     <MobileContainer>{children}</MobileContainer>\n//   </div>\n// )\n// class DesktopContainer extends Component {\n//   state = {}\n//   // state = {}\n//   handleContextRef = contextRef => this.setState({ contextRef })\n//   hideFixedMenu = () => this.setState({ fixed: false })\n//   showFixedMenu = () => this.setState({ fixed: true })\n//   render() {\n//     const { children } = this.props\n//     const { fixed } = this.state\n//     const { contextRef } = this.state\n//     return (\n//       <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n//         <Visibility\n//           once={false}\n//           onBottomPassed={this.showFixedMenu}\n//           onBottomPassedReverse={this.hideFixedMenu}\n//         >\n//           <Segment\n//             claasName=\"segment\"\n//             // inverted\n//             textAlign='center'\n//             style={{ minHeight: 100, padding: '0.5em 0em' }}\n//             vertical\n//           >\n//             <div ref={this.handleContextRef}>\n//               <Menu\n//                 fixed={fixed ? 'top' : null}\n//                 inverted={!fixed}\n//                 pointing={!fixed}\n//                 secondary={!fixed}\n//                 size='large'\n//               >\n//                 <Container>\n//                   <Menu.Item as='a' active>\n//                     <h1> The Books Of Medium </h1>\n//                   </Menu.Item>\n//                   <Menu.Menu position='right'>\n//                     <Menu.Item name='reviews' onClick={this.handleItemClick}>\n//                       About\n//                     </Menu.Item>\n//                   </Menu.Menu>\n//                 </Container>\n//               </Menu>\n//             </div>\n//             <HomepageHeading />\n//           </Segment>\n//         </Visibility>\n//         {children}\n//       </Responsive>\n//     )\n//   }\n// }\n// DesktopContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n// class MobileContainer extends Component {\n//   state = {}\n//   handleSidebarHide = () => this.setState({ sidebarOpened: false })\n//   handleToggle = () => this.setState({ sidebarOpened: true })\n//   render() {\n//     const { children } = this.props\n//     const { sidebarOpened } = this.state\n//     return (\n//       <Responsive\n//         as={Sidebar.Pushable}\n//         getWidth={getWidth}\n//         maxWidth={Responsive.onlyMobile.maxWidth}\n//       >\n//         <Segment\n//           textAlign='center'\n//           style={{ minHeight: 150, paddingTop: '0px' }}\n//           vertical\n//         >\n//           <Container>\n//             <Menu pointing secondary size='tiny'>\n//               <Menu.Item as='a' active>\n//                 <h1 style={{ fontSize: '18px' }}> The Books Of Medium </h1>\n//               </Menu.Item>\n//               <Menu.Menu position='right'>\n//                 <Menu.Item name='reviews' onClick={this.handleItemClick}>\n//                   About\n//                     </Menu.Item>\n//               </Menu.Menu>\n//             </Menu>\n//           </Container>\n//           <HomepageHeading mobile />\n//         </Segment>\n//         {children}\n//         {/* </Sidebar.Pusher> */}\n//       </Responsive>\n//     )\n//   }\n// }\n// MobileContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ResponsiveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(BookList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/itaycohen/Documents/GitHub/the-books-of-medium/src/App.js"],"names":["React","Component","BookList","ResponsiveContainer","PropTypes","Container","Menu","Segment","Visibility","Responsive","Sidebar","Header","Icon","Button","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,mBAAP,MAAgC,sDAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,WAAP;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,IARF,EASEC,MATF,QAUO,mBAVP,C,CAYA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;IAGMC,G;;;;;;;;;;;;;6BAEK;AACP,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAQD;;;;EAXeb,S;;AAYjB;AAED,eAAea,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport BookList from './components/bookList/BookList';\nimport ResponsiveContainer from './components/responsiveContainer/ResponsiveContainer';\n\nimport PropTypes from 'prop-types'\nimport './App.css';\nimport {\n  Container,\n  Menu,\n  Segment,\n  Visibility,\n  Responsive,\n  Sidebar,\n  Header,\n  Icon,\n  Button\n} from 'semantic-ui-react'\n\n// const getWidth = () => {\n//   const isSSR = typeof window === 'undefined'\n\n//   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n// }\n\n\n\n// /* eslint-disable react/no-multi-comp */\n// /* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n//  * such things.\n//  */\n// const HomepageHeading = ({ mobile }) => (\n//   <Container text>\n//     <Header\n//       as='h2'\n//       content='The most mentioned books on Medium'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '1.1em' : '1.5em',\n//         fontWeight: 'normal',\n//         marginBottom: 0,\n//         marginTop: mobile ? '1em' : '1.5em',\n//       }}\n//     />\n//     <Header\n//       as='h3'\n//       content='I analyzed every book ever mentioned on Medium. Here are the most popular ones.'\n//       inverted\n//       style={{\n//         fontSize: mobile ? '0.9em' : '1em',\n//         fontWeight: 'normal',\n//         marginTop: mobile ? '0.5em' : '1em',\n//       }}\n//     />\n//     {/* <Button primary size='huge'>\n//       Get Started\n//       <Icon name='right arrow' />\n//     </Button> */}\n//   </Container>\n// )\n\n\n// HomepageHeading.propTypes = {\n//   mobile: PropTypes.bool,\n// }\n\n\n\n\n// const ResponsiveContainer = ({ children }) => (\n//   <div>\n//     <DesktopContainer>{children}</DesktopContainer>\n//     <MobileContainer>{children}</MobileContainer>\n//   </div>\n// )\n\n\n// class DesktopContainer extends Component {\n//   state = {}\n\n//   // state = {}\n\n//   handleContextRef = contextRef => this.setState({ contextRef })\n\n//   hideFixedMenu = () => this.setState({ fixed: false })\n//   showFixedMenu = () => this.setState({ fixed: true })\n\n//   render() {\n//     const { children } = this.props\n//     const { fixed } = this.state\n\n//     const { contextRef } = this.state\n\n//     return (\n//       <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n//         <Visibility\n//           once={false}\n//           onBottomPassed={this.showFixedMenu}\n//           onBottomPassedReverse={this.hideFixedMenu}\n//         >\n//           <Segment\n//             claasName=\"segment\"\n//             // inverted\n//             textAlign='center'\n//             style={{ minHeight: 100, padding: '0.5em 0em' }}\n//             vertical\n//           >\n//             <div ref={this.handleContextRef}>\n\n//               <Menu\n//                 fixed={fixed ? 'top' : null}\n//                 inverted={!fixed}\n//                 pointing={!fixed}\n//                 secondary={!fixed}\n//                 size='large'\n//               >\n//                 <Container>\n//                   <Menu.Item as='a' active>\n//                     <h1> The Books Of Medium </h1>\n//                   </Menu.Item>\n\n//                   <Menu.Menu position='right'>\n//                     <Menu.Item name='reviews' onClick={this.handleItemClick}>\n//                       About\n//                     </Menu.Item>\n\n//                   </Menu.Menu>\n//                 </Container>\n//               </Menu>\n//             </div>\n\n//             <HomepageHeading />\n//           </Segment>\n\n//         </Visibility>\n\n//         {children}\n//       </Responsive>\n//     )\n//   }\n// }\n\n\n\n// DesktopContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n\n\n// class MobileContainer extends Component {\n//   state = {}\n\n//   handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n//   handleToggle = () => this.setState({ sidebarOpened: true })\n\n//   render() {\n//     const { children } = this.props\n//     const { sidebarOpened } = this.state\n\n//     return (\n//       <Responsive\n//         as={Sidebar.Pushable}\n//         getWidth={getWidth}\n//         maxWidth={Responsive.onlyMobile.maxWidth}\n//       >\n\n\n\n//         <Segment\n          \n//           textAlign='center'\n//           style={{ minHeight: 150, paddingTop: '0px' }}\n//           vertical\n//         >\n//           <Container>\n//             <Menu pointing secondary size='tiny'>\n//               <Menu.Item as='a' active>\n//                 <h1 style={{ fontSize: '18px' }}> The Books Of Medium </h1>\n//               </Menu.Item>\n//               <Menu.Menu position='right'>\n//                 <Menu.Item name='reviews' onClick={this.handleItemClick}>\n//                   About\n//                     </Menu.Item>\n\n//               </Menu.Menu>\n//             </Menu>\n//           </Container>\n//           <HomepageHeading mobile />\n//         </Segment>\n\n//         {children}\n//         {/* </Sidebar.Pusher> */}\n//       </Responsive>\n//     )\n//   }\n// }\n\n// MobileContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <ResponsiveContainer>\n\n        {/* <Container text style={{ marginTop: '0em' }} textAlign='center'> */}\n        <BookList />\n        {/* </Container> */}\n      </ResponsiveContainer>\n    );\n  }\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}